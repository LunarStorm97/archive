name: Node.js CI

on:
  workflow_dispatch:
    inputs:
      model:
        description: "Model"
        required: true
        default: "SM-A236M"
      region:
        description: "Region"
        required: true
        default: "ARO"
      imei:
        description: "IMEI/Serial Number"
        required: true
        default: "358263681238947"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        region:
          [
            "ARO", "CGU", "CHE", "CHL", "CHO", "CHT", "CHX", "CTI", "GLO",
            "GTO", "PGU", "PSN", "TPA", "UFN", "ZTA", "ZTM", "ZTO", "ZVV"
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.1.0
        with:
          node-version: "22.x"

      - name: Install dependencies
        run: npm install

      - name: Run script
        run: node main.mjs -m ${{ inputs.model }} -r ${{ matrix.region }} -i ${{ inputs.imei }}

      - name: Split large files
        run: |
          for file in ${{ inputs.model }}_${{ matrix.region }}/AP*; do
            split -b 1024m "$file" "${file}_part_"
            rm "$file"
          done

      - name: Get latest firmware version
        id: get_latest_version
        run: |
          LATEST_VERSION=$(curl -s http://fota-cloud-dn.ospserver.net/firmware/${{ matrix.region }}/${{ inputs.model }}/version.xml | grep -oP '(?<=<latest o="\d{02}">)[^/]+')
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Check if release exists
        id: check_release
        run: |
          release_info=$(gh release view ${{ inputs.model }}_${{ matrix.region }} --json name --jq ".name" || echo "not_found")
          if [ "$release_info" == "${{ env.LATEST_VERSION }}" ]; then
            echo "Release with tag ${{ inputs.model }}_${{ matrix.region }} and version ${{ env.LATEST_VERSION }} already exists."
            echo "release_exists=true" >> $GITHUB_ENV
          else
            echo "No matching release found or version mismatch."
            echo "release_exists=false" >> $GITHUB_ENV

      - name: GH Release
        if: env.release_exists == 'false'
        uses: softprops/action-gh-release@v2.2.1
        with:
          files: |
            ${{ inputs.model }}_${{ matrix.region }}/*
          name: ${{ env.LATEST_VERSION }}
          tag_name: ${{ inputs.model }}_${{ matrix.region }}
